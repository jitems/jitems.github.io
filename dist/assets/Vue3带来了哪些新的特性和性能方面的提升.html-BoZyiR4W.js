import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o,d as r}from"./app-Bi9sAhmd.js";const i={},n=r('<h1 id="vue3有哪些新的特性和性能提升" tabindex="-1"><a class="header-anchor" href="#vue3有哪些新的特性和性能提升"><span>Vue3有哪些新的特性和性能提升</span></a></h1><ul><li><strong>引入了 Composition API（组合式 API）</strong>。允许开发者更灵活地组织和重用组件逻辑。它使用函数而不是选项对象来组织组件的代码，使得代码更具可读性和维护性。</li><li><strong>多根组件</strong>。可以直接在 template 中使用多个根级别的元素，而不需要额外的包装元素。这样更方便地组织组件的结构。</li><li><strong>引入了 Teleport（传送）</strong>。可以将组件的内容渲染到指定 DOM 节点的新特性。一般用于创建全局弹窗和对话框等组件。</li><li><strong>响应式系统升级</strong>。从 defineProperty 升级到 ES2015 原生的 Proxy，不需要初始化遍历所有属性，就可以监听新增和删除的属性。</li><li><strong>编译优化</strong>。重写了虚拟 DOM，提升了渲染速度。diff 时静态节点会被直接跳过。</li><li><strong>源码体积优化</strong>。移除了一些非必要的特性，如 filter，一些新增的模块也将会被按需引入，减小了打包体积。</li><li><strong>打包优化</strong>。更强的 Tree Shaking，可以过滤不使用的模块，没有使用到的组件，比如过渡（transition）组件，则打包时不会包含它。</li></ul>',2),l=[n];function s(a,p){return o(),e("div",null,l)}const g=t(i,[["render",s],["__file","Vue3带来了哪些新的特性和性能方面的提升.html.vue"]]),E=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue3/Vue3%E5%B8%A6%E6%9D%A5%E4%BA%86%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7%E5%92%8C%E6%80%A7%E8%83%BD%E6%96%B9%E9%9D%A2%E7%9A%84%E6%8F%90%E5%8D%87.html","title":"Vue3有哪些新的特性和性能提升","lang":"zh-CN","frontmatter":{"description":"Vue3有哪些新的特性和性能提升 引入了 Composition API（组合式 API）。允许开发者更灵活地组织和重用组件逻辑。它使用函数而不是选项对象来组织组件的代码，使得代码更具可读性和维护性。 多根组件。可以直接在 template 中使用多个根级别的元素，而不需要额外的包装元素。这样更方便地组织组件的结构。 引入了 Teleport（传送）。...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue3/Vue3%E5%B8%A6%E6%9D%A5%E4%BA%86%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7%E5%92%8C%E6%80%A7%E8%83%BD%E6%96%B9%E9%9D%A2%E7%9A%84%E6%8F%90%E5%8D%87.html"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"Vue3有哪些新的特性和性能提升"}],["meta",{"property":"og:description","content":"Vue3有哪些新的特性和性能提升 引入了 Composition API（组合式 API）。允许开发者更灵活地组织和重用组件逻辑。它使用函数而不是选项对象来组织组件的代码，使得代码更具可读性和维护性。 多根组件。可以直接在 template 中使用多个根级别的元素，而不需要额外的包装元素。这样更方便地组织组件的结构。 引入了 Teleport（传送）。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:09:47.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:09:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue3有哪些新的特性和性能提升\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:09:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1720591787000,"updatedTime":1720591787000,"contributors":[{"name":"test","email":"email","commits":1}]},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"知识库/vue3/Vue3带来了哪些新的特性和性能方面的提升.md","localizedDate":"2024年7月10日","excerpt":"\\n<ul>\\n<li><strong>引入了 Composition API（组合式 API）</strong>。允许开发者更灵活地组织和重用组件逻辑。它使用函数而不是选项对象来组织组件的代码，使得代码更具可读性和维护性。</li>\\n<li><strong>多根组件</strong>。可以直接在 template 中使用多个根级别的元素，而不需要额外的包装元素。这样更方便地组织组件的结构。</li>\\n<li><strong>引入了 Teleport（传送）</strong>。可以将组件的内容渲染到指定 DOM 节点的新特性。一般用于创建全局弹窗和对话框等组件。</li>\\n<li><strong>响应式系统升级</strong>。从 defineProperty 升级到 ES2015 原生的 Proxy，不需要初始化遍历所有属性，就可以监听新增和删除的属性。</li>\\n<li><strong>编译优化</strong>。重写了虚拟 DOM，提升了渲染速度。diff 时静态节点会被直接跳过。</li>\\n<li><strong>源码体积优化</strong>。移除了一些非必要的特性，如 filter，一些新增的模块也将会被按需引入，减小了打包体积。</li>\\n<li><strong>打包优化</strong>。更强的 Tree Shaking，可以过滤不使用的模块，没有使用到的组件，比如过渡（transition）组件，则打包时不会包含它。</li>\\n</ul>","autoDesc":true}');export{g as comp,E as data};
