import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,o as a,a as e}from"./app-Bi9sAhmd.js";const o={},n=e("h1",{id:"vue响应式原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue响应式原理"},[e("span",null,"vue响应式原理")])],-1),c=e("p",null,"采用数据劫持结合发布者-订阅者模式的方式，data数据在初始化的时候，会实例化一个Observe类，在它会将data数据进行递归遍历，并通过Object.defineProperty(滴坏的 破 婆儿 立)方法，给每个值添加上一个getter和一个setter。在数据读取的时候会触发getter进行依赖（Watcher(喔 乞儿)）收集，当数据改变时，会触发setter，对刚刚收集的依赖进行触发，并且更新watcher(喔 乞儿)通知视图进行渲染",-1),i=[n,c];function p(s,d){return a(),r("div",null,i)}const u=t(o,[["render",p],["__file","vue响应式原理.html.vue"]]),h=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html","title":"vue响应式原理","lang":"zh-CN","frontmatter":{"description":"vue响应式原理 采用数据劫持结合发布者-订阅者模式的方式，data数据在初始化的时候，会实例化一个Observe类，在它会将data数据进行递归遍历，并通过Object.defineProperty(滴坏的 破 婆儿 立)方法，给每个值添加上一个getter和一个setter。在数据读取的时候会触发getter进行依赖（Watcher(喔 乞儿)）收...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"vue响应式原理"}],["meta",{"property":"og:description","content":"vue响应式原理 采用数据劫持结合发布者-订阅者模式的方式，data数据在初始化的时候，会实例化一个Observe类，在它会将data数据进行递归遍历，并通过Object.defineProperty(滴坏的 破 婆儿 立)方法，给每个值添加上一个getter和一个setter。在数据读取的时候会触发getter进行依赖（Watcher(喔 乞儿)）收..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:09:47.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:09:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue响应式原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:09:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1720591787000,"updatedTime":1720591787000,"contributors":[{"name":"test","email":"email","commits":1}]},"readingTime":{"minutes":0.48,"words":143},"filePathRelative":"知识库/vue2/vue响应式原理.md","localizedDate":"2024年7月10日","excerpt":"\\n<p>采用数据劫持结合发布者-订阅者模式的方式，data数据在初始化的时候，会实例化一个Observe类，在它会将data数据进行递归遍历，并通过Object.defineProperty(滴坏的 破 婆儿 立)方法，给每个值添加上一个getter和一个setter。在数据读取的时候会触发getter进行依赖（Watcher(喔 乞儿)）收集，当数据改变时，会触发setter，对刚刚收集的依赖进行触发，并且更新watcher(喔 乞儿)通知视图进行渲染</p>\\n","autoDesc":true}');export{u as comp,h as data};
