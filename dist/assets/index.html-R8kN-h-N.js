import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as i,a as l,d as a,o}from"./app-Bi9sAhmd.js";const s={},r=l("p",null," ",-1),p=a('<h1 id="鸿蒙工程" tabindex="-1"><a class="header-anchor" href="#鸿蒙工程"><span>鸿蒙工程</span></a></h1><h2 id="下载与安装deveco-studio" tabindex="-1"><a class="header-anchor" href="#下载与安装deveco-studio"><span>下载与安装DevEco Studio</span></a></h2><p><a href="https://developer.harmonyos.com/cn/develop/deveco-studio" target="_blank" rel="noopener noreferrer">DevEco Studio下载官网</a>，单击“立即下载”进入下载页面。</p><img src="https://jitems.github.io/blog/bk623.png" alt="solar"><p>下载完成后一直下一步，直到完成安装</p><h2 id="配置环境" tabindex="-1"><a class="header-anchor" href="#配置环境"><span>配置环境</span></a></h2><p>进入DevEco Studio配置页面，首先需要进行基础配置，包括Node.js与Ohpm的安装路径设置，选择从华为镜像下载至合适的路径。</p><img src="https://jitems.github.io/blog/bk624.png" alt="solar"><p>单击&#39;Next&#39;进入SDK配置，设置为合适的路径，</p><img src="https://jitems.github.io/blog/bk625.png" alt="solar"><p>点击&#39;Next&#39;后会显示&#39;SDK License Agreement&#39;，阅读相关协议后，勾选&#39;Accept&#39;。</p><img src="https://jitems.github.io/blog/bk626.png" alt="solar"><p>单击‘Next’进入配置预览页，在这里进行配置项的确认。</p><img src="https://jitems.github.io/blog/bk627.png" alt="solar"><p>确认完成后，单击&#39;Next&#39;，进入下一步。</p><img src="https://jitems.github.io/blog/bk628.png" alt="solar"><p>等待配置自动下载完成，完成后，单击&#39;Finish&#39;，IDE会进入欢迎页，我们也就成功配置好了开发环境。</p><img src="https://jitems.github.io/blog/bk629.png" alt="solar"><p>准备工作完成后，接下来将进入DevEco Studio进行工程创建和运行。</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h2><p>选择‘Application’，然后选择‘Empty Ability’，单击‘Next’进入工程配置页。</p><img src="https://jitems.github.io/blog/bk630.png" alt="solar"><p>配置页中，详细信息如下：</p><ul><li>Project name是开发者可以自行设置的项目名称，这里根据自己选择修改为自己项目名称。</li><li>Bundle name是包名称，默认情况下应用ID也会使用该名称，应用发布时对应的ID需要保持一致。</li><li>Save location为工程保存路径，建议用户自行设置相应位置。</li><li>Compile SDK是编译的API版本，这里默认选择API9。</li><li>Model选择Stage模型，其他保持默认即可。</li></ul><p>然后单击“Finish”完成工程创建，等待工程同步完成。</p><h2 id="认识deveco-studio界面" tabindex="-1"><a class="header-anchor" href="#认识deveco-studio界面"><span>认识DevEco Studio界面</span></a></h2><p>进入IDE后，我们首先了解一下基础的界面。整个IDE的界面大致上可以分为四个部分，分别是代码编辑区、通知栏、工程目录区以及预览区。</p><p>1、代码编辑区 中间的是代码编辑区，你可以在这里修改你的代码，以及切换显示的文件。通过按住Ctrl加鼠标滚轮，可以实现界面的放大与缩小。</p><img src="https://jitems.github.io/blog/bk631.png" alt="solar"><p>2、通知栏 在编辑器底部有一行工具栏，主要介绍常用信息栏，其中Run是项目运行时的信息栏，Problems是当前工程错误与提醒信息栏，Terminal是命令行终端，在这里执行命令行操作，PreviewerLog是预览器日志输出栏，Log是模拟器和真机运行时的日志输出栏。在后续使用中会陆续接触。</p><img src="https://jitems.github.io/blog/bk632.png" alt="solar"><p>3、工程目录区 左侧为工程目录区，后续章节会详细介绍。</p><img src="https://jitems.github.io/blog/bk633.png" alt="solar"><p>4、预览区 单击右上角Previewer，可以预览相应的文件UI展示效果。</p><img src="https://jitems.github.io/blog/bk634.png" alt="solar"><p>预览器提供了一些基本功能，包括旋转屏幕，切换显示设备及多设备预览等。单击旋转按钮，可以切换竖屏和横屏显示的效果。</p><img src="https://jitems.github.io/blog/bk635.png" alt="solar"><p>也可以单击如下列表按钮，切换显示的设备类型。弹出框内会显示Available Profiles，即可用的设备类型。</p><img src="https://jitems.github.io/blog/bk636.png" alt="solar"><p>如单击Foldable切换设备，也可以单击旋转按钮切换Foldable的横竖屏显示模式。 打开Muti-profile preview开关，可以实现多个尺寸设备的实时预览。</p><img src="https://jitems.github.io/blog/bk637.png" alt="solar"><p>单击预览器右上角组件预览按钮，可以进入组件预览界面。</p><img src="https://jitems.github.io/blog/bk638.png" alt="solar"><p>组件预览模式可以预览当前组件对应的代码块。 点击相应组件，代码文件中会框选对应的组件代码部分，下方则对应当前组件的基本属性。</p><img src="https://jitems.github.io/blog/bk639.png" alt="solar"><h2 id="了解基本工程目录" tabindex="-1"><a class="header-anchor" href="#了解基本工程目录"><span>了解基本工程目录</span></a></h2><h3 id="工程级目录" tabindex="-1"><a class="header-anchor" href="#工程级目录"><span>工程级目录</span></a></h3><p>工程的目录结构如下。</p><img src="https://jitems.github.io/blog/bk640.png" alt="solar"><p>其中详细如下：</p><ul><li>AppScope中存放应用全局所需要的资源文件。</li><li>entry是应用的主模块，存放HarmonyOS应用的代码、资源等。</li><li>oh_modules是工程的依赖包，存放工程依赖的源文件。</li><li>build-profile.json5是工程级配置信息，包括签名、产品配置等。</li><li>hvigorfile.ts是工程级编译构建任务脚本，hvigor是基于任务管理机制实现的一款全新的自动化构建工具，主要提供任务注册编排，工程模型管理、配置管理等核心能力。</li><li>oh-package.json5是工程级依赖配置文件，用于记录引入包的配置信息。 在AppScope，其中有resources文件夹和配置文件app.json5。</li></ul><p>AppScope&gt;resources&gt;base中包含element和media两个文件夹，</p><ul><li>其中element文件夹主要存放公共的字符串、布局文件等资源。</li><li>media存放全局公共的多媒体资源文件。</li></ul><img src="https://jitems.github.io/blog/bk641.png" alt="solar"><h3 id="模块级目录" tabindex="-1"><a class="header-anchor" href="#模块级目录"><span>模块级目录</span></a></h3><img src="https://jitems.github.io/blog/bk642.png" alt="solar"><p>entry&gt;src目录中主要包含总的main文件夹，单元测试目录ohosTest，以及模块级的配置文件。</p><ul><li>main文件夹中，ets文件夹用于存放ets代码，resources文件存放模块内的多媒体及布局文件等，module.json5文件为模块的配置文件。</li><li>ohosTest是单元测试目录。</li><li>build-profile.json5是模块级配置信息，包括编译构建配置项。</li><li>hvigorfile.ts文件是模块级构建脚本。</li><li>oh-package.json5是模块级依赖配置信息文件。</li></ul><p>进入src&gt;main&gt;ets目录中，其分为entryability、pages两个文件夹。</p><ul><li>entryability存放ability文件，用于当前ability应用逻辑和生命周期管理。</li><li>pages存放UI界面相关代码文件，初始会生成一个Index页面。</li></ul><img src="https://jitems.github.io/blog/bk643.png" alt="solar"><p>resources目录下存放模块公共的多媒体、字符串及布局文件等资源，分别存放在element、media文件夹中。</p><img src="https://jitems.github.io/blog/bk644.png" alt="solar"><h3 id="app-json5" tabindex="-1"><a class="header-anchor" href="#app-json5"><span>app.json5</span></a></h3><p>AppScope&gt;app.json5是应用的全局的配置文件，用于存放应用公共的配置信息。</p><img src="https://jitems.github.io/blog/bk645.png" alt="solar"><p>其中配置信息如下：</p><ul><li>bundleName是包名。</li><li>vendor是应用程序供应商。</li><li>versionCode是用于区分应用版本。</li><li>versionName是版本号。</li><li>icon对应于应用的显示图标。</li><li>label是应用名。</li></ul><h3 id="module-json5" tabindex="-1"><a class="header-anchor" href="#module-json5"><span>module.json5</span></a></h3><p>entry&gt;src&gt;main&gt;module.json5是模块的配置文件，包含当前模块的配置信息。</p><img src="https://jitems.github.io/blog/bk646.png" alt="solar"><p>其中module对应的是模块的配置信息，一个模块对应一个打包后的hap包，hap包全称是HarmonyOS Ability Package，其中包含了ability、第三方库、资源和配置文件。其具体属性及其描述可以参照下表1。</p><p>表1 module.json5默认配置属性及描述</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>该标签标识当前module的名字，module打包成hap后，表示hap的名称，标签值采用字符串表示（最大长度31个字节），该名称在整个应用要唯一。</td></tr><tr><td>type</td><td>表示模块的类型，类型有三种，分别是entry、feature和har。</td></tr><tr><td>srcEntry</td><td>当前模块的入口文件路径。</td></tr><tr><td>description</td><td>当前模块的描述信息。</td></tr><tr><td>mainElement</td><td>该标签标识hap的入口ability名称或者extension名称。只有配置为mainElement的ability或者extension才允许在服务中心露出。</td></tr><tr><td>deviceTypes</td><td>该标签标识hap可以运行在哪类设备上，标签值采用字符串数组的表示。</td></tr><tr><td>deliveryWithInstall</td><td>标识当前Module是否在用户主动安装的时候安装，表示该Module对应的HAP是否跟随应用一起安装。- true：主动安装时安装。- false：主动安装时不安装。</td></tr><tr><td>installationFree</td><td>标识当前Module是否支持免安装特性。- true：表示支持免安装特性，且符合免安装约束。- false：表示不支持免安装特性。</td></tr><tr><td>pages</td><td>对应的是main_pages.json文件，用于配置ability中用到的page信息。</td></tr><tr><td>abilities</td><td>是一个数组，存放当前模块中所有的ability元能力的配置信息，其中可以有多个ability。</td></tr></tbody></table><p>对于abilities中每一个ability的属性项，其描述信息如下表2。 表2 abilities中对象的默认配置属性及描述</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>该标签标识当前ability的逻辑名，该名称在整个应用要唯一，标签值采用字符串表示（最大长度127个字节）。</td></tr><tr><td>srcEntry</td><td>ability的入口代码路径。</td></tr><tr><td>description</td><td>ability的描述信息。</td></tr><tr><td>icon</td><td>ability的图标。该标签标识ability图标，标签值为资源文件的索引。该标签可缺省，缺省值为空。如果ability被配置为MainElement，该标签必须配置。</td></tr><tr><td>label</td><td>ability的标签名。</td></tr><tr><td>startWindowIcon</td><td>启动页面的图标。</td></tr><tr><td>startWindowBackground</td><td>启动页面的背景色。</td></tr><tr><td>visible</td><td>ability是否可以被其他应用程序调用，true表示可以被其它应用调用， false表示不可以被其它应用调用。</td></tr><tr><td>skills</td><td>标识能够接收的意图的action值的集合，取值通常为系统预定义的action值，也允许自定义。</td></tr><tr><td>entities</td><td>标识能够接收的Want的Action值的集合，取值通常为系统预定义的action值，也允许自定义。</td></tr><tr><td>actions</td><td>标识能够接收Want的Entity值的集合。</td></tr></tbody></table><h3 id="main-pages-json" tabindex="-1"><a class="header-anchor" href="#main-pages-json"><span>main_pages.json</span></a></h3><p>src/main/resources/base/profile/main_pages.json文件保存的是页面page的路径配置信息，所有需要进行路由跳转的page页面都要在这里进行配置。</p><img src="https://jitems.github.io/blog/bk647.png" alt="solar">',79);function n(d,h){return o(),e("div",null,[r,i(" more "),p])}const m=t(s,[["render",n],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/","title":"鸿蒙工程","lang":"zh-CN","frontmatter":{"title":"鸿蒙工程","category":["前端"],"tag":["HarmonyOS"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"鸿蒙工程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:34:54.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:tag","content":"HarmonyOS"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:34:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"鸿蒙工程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:34:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"下载与安装DevEco Studio","slug":"下载与安装deveco-studio","link":"#下载与安装deveco-studio","children":[]},{"level":2,"title":"配置环境","slug":"配置环境","link":"#配置环境","children":[]},{"level":2,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]},{"level":2,"title":"认识DevEco Studio界面","slug":"认识deveco-studio界面","link":"#认识deveco-studio界面","children":[]},{"level":2,"title":"了解基本工程目录","slug":"了解基本工程目录","link":"#了解基本工程目录","children":[{"level":3,"title":"工程级目录","slug":"工程级目录","link":"#工程级目录","children":[]},{"level":3,"title":"模块级目录","slug":"模块级目录","link":"#模块级目录","children":[]},{"level":3,"title":"app.json5","slug":"app-json5","link":"#app-json5","children":[]},{"level":3,"title":"module.json5","slug":"module-json5","link":"#module-json5","children":[]},{"level":3,"title":"main_pages.json","slug":"main-pages-json","link":"#main-pages-json","children":[]}]}],"git":{"createdTime":1720591787000,"updatedTime":1720593294000,"contributors":[{"name":"test","email":"email","commits":2}]},"readingTime":{"minutes":8.02,"words":2406},"filePathRelative":"前端/鸿蒙开发教程/README.md","localizedDate":"2024年7月10日","excerpt":"<p>&nbsp;</p>\\n"}');export{m as comp,b as data};
