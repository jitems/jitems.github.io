import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as s,a,d as n,o as l}from"./app-Bi9sAhmd.js";const t={},d=a("p",null," ",-1),r=n(`<h1 id="docker安装" tabindex="-1"><a class="header-anchor" href="#docker安装"><span>docker安装</span></a></h1><p>官网：https://hub.docker.com/</p><p>文档：https://docs.docker.com/</p><p>下载地址：https://docs.docker.com/desktop/install/windows-install/</p><h2 id="常用" tabindex="-1"><a class="header-anchor" href="#常用"><span>常用</span></a></h2><h3 id="创建文件夹-mkdir" tabindex="-1"><a class="header-anchor" href="#创建文件夹-mkdir"><span>创建文件夹 mkdir</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>mkdir hopme</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="创建文件-touch" tabindex="-1"><a class="header-anchor" href="#创建文件-touch"><span>创建文件 touch</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>touch  hellow.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="打开文件-vim" tabindex="-1"><a class="header-anchor" href="#打开文件-vim"><span>打开文件 vim</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>vim hellow.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看文件-cat" tabindex="-1"><a class="header-anchor" href="#查看文件-cat"><span>查看文件 cat</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>cat hellow.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看当前路径-pwd" tabindex="-1"><a class="header-anchor" href="#查看当前路径-pwd"><span>查看当前路径 pwd</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>pwd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看容器日志" tabindex="-1"><a class="header-anchor" href="#查看容器日志"><span>查看容器日志</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker logs  容器id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="docker复制" tabindex="-1"><a class="header-anchor" href="#docker复制"><span>docker复制</span></a></h3><p><strong>注意：命令是在容器外面使用的，不要在容器内部去使用</strong> 将主机/www/runoob目录拷贝到容器96f7f14e99ab的/www目录下。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker cp /www/runoob 96f7f14e99ab:/www/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将主机/www/runoob目录拷贝到容器96f7f14e99ab中，目录重命名为www。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker cp /www/runoob 96f7f14e99ab:/www</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker cp  96f7f14e99ab:/www /tmp/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="docker镜像加速" tabindex="-1"><a class="header-anchor" href="#docker镜像加速"><span>docker镜像加速</span></a></h2><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决 <strong>CDN加速配置：反向代理服务</strong> 1、打开地址https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors，找到镜像加速器</p><img src="https://jitems.github.io/blog/bk603.png" alt="solar"><p>在docker客户端配置Docker Engine，这个就是daemon.jon配置文件</p><img src="https://jitems.github.io/blog/bk604.png" alt="solar"><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;features&quot;: {</span></span>
<span class="line"><span>    &quot;buildkit&quot;: true</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;experimental&quot;: false,</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [</span></span>
<span class="line"><span>      &quot;https://g78ax16j.mirror.aliyuncs.com&quot;</span></span>
<span class="line"><span>   ]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看docker版本信息" tabindex="-1"><a class="header-anchor" href="#查看docker版本信息"><span>查看docker版本信息</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker  --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="显示docker系统信息" tabindex="-1"><a class="header-anchor" href="#显示docker系统信息"><span>显示docker系统信息</span></a></h2><p>显示docker系统信息、包括镜像及容器数量</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker info</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="帮助命令" tabindex="-1"><a class="header-anchor" href="#帮助命令"><span>帮助命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="镜像命令" tabindex="-1"><a class="header-anchor" href="#镜像命令"><span>镜像命令</span></a></h2><h3 id="查看所有本地的主机上的镜像" tabindex="-1"><a class="header-anchor" href="#查看所有本地的主机上的镜像"><span>查看所有本地的主机上的镜像</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker images</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk605.png" alt="solar"><ul><li>REPOSITORY: 仓库中镜像名称</li><li>TAG: 镜像的标签信息，比如 5.7、latest 表示不同的版本信息；</li><li>IMAGE ID:镜像的 ID, 如果您看到两个 ID 完全相同，那么实际上，它们指向的是同一个镜像，只是标签名称不同罢了；</li><li>CREATED:镜像最后的更新时间；</li><li>SIZE: 镜像的大小，优秀的镜像一般体积都比较小，这也是我更倾向于使用轻量级的 alpine 版本的原因；</li></ul><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><p>命令：docker pull 镜像名称</p><ul><li>比如拉取mysql镜像 <ul><li>docker pull mysql</li></ul></li><li>拉取指定版本可以 冒号后面是版本号 <ul><li>docker pull mysql:5.7.35</li></ul></li></ul><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker rmi -f 镜像id    删除单个镜像</span></span>
<span class="line"><span>docker rmi -f 镜像id 镜像id  删除多个镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除所有镜像" tabindex="-1"><a class="header-anchor" href="#删除所有镜像"><span>删除所有镜像</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker rmi -f $(docker images aq)    递归删除所有镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="容器命令" tabindex="-1"><a class="header-anchor" href="#容器命令"><span>容器命令</span></a></h2><p>说明：我们有了镜像才可以创建容器，linux，下载一个centos镜像来测试学习</p><h3 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器"><span>创建容器</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker run [可选参数]  镜像名称[:版本号] -it [/bin/bash]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>可选参数说明：</span></span>
<span class="line"><span>--name=&quot;nginx-lb&quot;: 为容器指定一个名称</span></span>
<span class="line"><span>-d: 后台运行容器,容器处于守护进程运行，并返回容器ID；</span></span>
<span class="line"><span>-it:使用交互方式运行，进入容器查看内容</span></span>
<span class="line"><span>-p:指定容器的端口(端口映射)  例如: -p 3306:3306</span></span>
<span class="line"><span>-P：表示随机指定端口</span></span>
<span class="line"><span>-a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</span></span>
<span class="line"><span>-i: 以交互模式运行容器，通常与 -t 同时使用；</span></span>
<span class="line"><span>-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span></span>
<span class="line"><span>-v 可以挂在宿主机目录至容器目录，如-v /data:/tmp/data，左边为宿主机目录，右边为容器目录。</span></span>
<span class="line"><span>--dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；</span></span>
<span class="line"><span>--dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例</strong> 使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx。 latest：最新版本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker run -it --name mynginx -d nginx:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="启动并进入容器" tabindex="-1"><a class="header-anchor" href="#启动并进入容器"><span>启动并进入容器</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker  run  -it  centos /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>/bin/bash：表示给一个控制台来运行</p><img src="https://jitems.github.io/blog/bk606.png" alt="solar"><p>查看容器中的文件</p><img src="https://jitems.github.io/blog/bk607.png" alt="solar"><h4 id="后台启动容器" tabindex="-1"><a class="header-anchor" href="#后台启动容器"><span>后台启动容器</span></a></h4><p>docker run -d 镜像名 问题：发现后台启动容器后，容器自动停止了 常见的坑</p><ul><li>docker 容器使用后台运行，就必须要有一个前台进程，docker发现没有应用，就会自己停止</li><li>nginx，容器启动后，发现自己没有提供服务，就会立即停止，就是没有程序了 tomcat：tomact可以使用这种方式，不会立即停止 所有应该使用</li><li>docker run -it centos /bin/bash</li></ul><img src="https://jitems.github.io/blog/bk608.png" alt="solar"><h3 id="进入容器" tabindex="-1"><a class="header-anchor" href="#进入容器"><span>进入容器</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker  exec  -it  容器id   /bin/bash   #进入容器后开启一个新的终端，可以在里面操作(常用)</span></span>
<span class="line"><span>docker  attach  容器id                 #进入容器正在执行的终端，不会启动新的终端</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="退出容器" tabindex="-1"><a class="header-anchor" href="#退出容器"><span>退出容器</span></a></h3><p>/etc/nginx/nginx.conf exit #直接退出容器并且容器停止运行</p><img src="https://jitems.github.io/blog/bk609.png" alt="solar"><p>快捷键：ctrl+p+Q #不停止容器运行退出容器</p><img src="https://jitems.github.io/blog/bk610.png" alt="solar"><h3 id="查看容器" tabindex="-1"><a class="header-anchor" href="#查看容器"><span>查看容器</span></a></h3><ul><li>docker ps #查看正在运行的容器</li><li>docker ps -a #查看已停止运行的容器</li><li>docker ps -a -n=1 #显示最近创建的容器</li><li>docker ps -aq #显示容器的编号</li></ul><h3 id="启动和停止容器操作" tabindex="-1"><a class="header-anchor" href="#启动和停止容器操作"><span>启动和停止容器操作</span></a></h3><ul><li>docker start 容器id #启动容器</li><li>docker restart容器id #重启容器</li><li>docker stop 容器id #停止当前正在运行的容器</li><li>docker kill 容器id #强制停止正在运行的容器</li></ul><h3 id="删除容器" tabindex="-1"><a class="header-anchor" href="#删除容器"><span>删除容器</span></a></h3><ul><li>-f：表示强制删除</li><li>docker rm -f 容器id #删除单个容器</li><li>docker rm -f 容器id 容器id #删除多个容器</li><li>docker rm -f $(docker ps -aq) #删除所有容器</li><li>docker contalners prune #删除所有没有运行的容器</li></ul>`,79);function h(c,p){return l(),i("div",null,[d,s(" more "),r])}const b=e(t,[["render",h],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/docker%E6%95%99%E7%A8%8B/","title":"docker安装","lang":"zh-CN","frontmatter":{"title":"docker安装","category":["后端"],"tag":["docker"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%90%8E%E7%AB%AF/docker%E6%95%99%E7%A8%8B/"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"docker安装"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:34:54.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:34:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:34:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"常用","slug":"常用","link":"#常用","children":[{"level":3,"title":"创建文件夹 mkdir","slug":"创建文件夹-mkdir","link":"#创建文件夹-mkdir","children":[]},{"level":3,"title":"创建文件 touch","slug":"创建文件-touch","link":"#创建文件-touch","children":[]},{"level":3,"title":"打开文件 vim","slug":"打开文件-vim","link":"#打开文件-vim","children":[]},{"level":3,"title":"查看文件 cat","slug":"查看文件-cat","link":"#查看文件-cat","children":[]},{"level":3,"title":"查看当前路径 pwd","slug":"查看当前路径-pwd","link":"#查看当前路径-pwd","children":[]},{"level":3,"title":"查看容器日志","slug":"查看容器日志","link":"#查看容器日志","children":[]},{"level":3,"title":"docker复制","slug":"docker复制","link":"#docker复制","children":[]}]},{"level":2,"title":"docker镜像加速","slug":"docker镜像加速","link":"#docker镜像加速","children":[]},{"level":2,"title":"查看docker版本信息","slug":"查看docker版本信息","link":"#查看docker版本信息","children":[]},{"level":2,"title":"显示docker系统信息","slug":"显示docker系统信息","link":"#显示docker系统信息","children":[]},{"level":2,"title":"帮助命令","slug":"帮助命令","link":"#帮助命令","children":[]},{"level":2,"title":"镜像命令","slug":"镜像命令","link":"#镜像命令","children":[{"level":3,"title":"查看所有本地的主机上的镜像","slug":"查看所有本地的主机上的镜像","link":"#查看所有本地的主机上的镜像","children":[]},{"level":3,"title":"拉取镜像","slug":"拉取镜像","link":"#拉取镜像","children":[]},{"level":3,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]},{"level":3,"title":"删除所有镜像","slug":"删除所有镜像","link":"#删除所有镜像","children":[]}]},{"level":2,"title":"容器命令","slug":"容器命令","link":"#容器命令","children":[{"level":3,"title":"创建容器","slug":"创建容器","link":"#创建容器","children":[]},{"level":3,"title":"进入容器","slug":"进入容器","link":"#进入容器","children":[]},{"level":3,"title":"退出容器","slug":"退出容器","link":"#退出容器","children":[]},{"level":3,"title":"查看容器","slug":"查看容器","link":"#查看容器","children":[]},{"level":3,"title":"启动和停止容器操作","slug":"启动和停止容器操作","link":"#启动和停止容器操作","children":[]},{"level":3,"title":"删除容器","slug":"删除容器","link":"#删除容器","children":[]}]}],"git":{"createdTime":1720591787000,"updatedTime":1720593294000,"contributors":[{"name":"test","email":"email","commits":2}]},"readingTime":{"minutes":4.43,"words":1329},"filePathRelative":"后端/docker教程/README.md","localizedDate":"2024年7月10日","excerpt":"<p>&nbsp;</p>\\n"}');export{b as comp,g as data};
