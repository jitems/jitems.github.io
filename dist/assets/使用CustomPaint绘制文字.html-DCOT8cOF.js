import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,a as t,d as e,o as h}from"./app-Bi9sAhmd.js";const l={},n=t("p",null," ",-1),k=e(`<h1 id="使用custompaint绘制文字" tabindex="-1"><a class="header-anchor" href="#使用custompaint绘制文字"><span>使用CustomPaint绘制文字</span></a></h1><h1 id="drawparagraph" tabindex="-1"><a class="header-anchor" href="#drawparagraph"><span>drawParagraph</span></a></h1><p>绘制文本。需要传递2个参数：</p><ul><li><code>Paragraph paragraph</code>：文本对象</li><li><code>Offset offset</code>：文本绘制的位置</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">())..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Hello World&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Paragraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() ..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraphConstraints);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drawParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraph, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">350</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk516.png" alt="solar"><p>绘制的文字默认大小为<strong>14</strong>，颜色为白色。如果你直接使用以上代码并不能绘制成我这样。这里我用<code>SizedBox.expand</code>包裹了<code>CustomPaint</code>，否则你的<code>size</code>值为0，<code>ParagraphConstraints(width: size.width)</code>设置的也是0，什么都绘制不出来。当然，你也可以使用<code>Center</code>包裹<code>CustomPaint</code>，需要重新设置一下<code>offset</code>，显示出来的效果如下：</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drawParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraph, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk517.png" alt="solar"><p><strong>Offset</strong>没有什么好说的，我们着重来研究研究<strong>Paragraph</strong>对象。</p><p>从以上代码我们可以得知，绘制文字首先需要一个<code>ParagraphBuilder</code>对象。该对象只有一个<code>style</code>属性，该属性是一个<code>ParagraphStyle</code>对象，看来我们得把矛头专项该对象了。</p><h2 id="paragraphbuilder" tabindex="-1"><a class="header-anchor" href="#paragraphbuilder"><span>ParagraphBuilder</span></a></h2><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><p>通过名称我们可以得知，该对象是用来设置文本风格的，它有以下多个属性：</p><ul><li><code>TextAlign? textAlign</code>：文本对齐方式</li><li><code>TextDirection? textDirection</code>：文本方向</li><li><code>int? maxLines</code>：文本最大行</li><li><code>String? fontFamily</code>：文本字体风格</li><li><code>double? fontSize</code>：字体大小</li><li><code>double? height</code>：文本行高</li><li><code>TextHeightBehavior? textHeightBehavior</code>：指定如何将行高应用于第一行的上升和最后一行的下降</li><li><code>FontWeight? fontWeight</code>：字重（粗细）</li><li><code>FontStyle? fontStyle</code>：绘制字母时使用的字体变体（例如，斜体）</li><li><code>StrutStyle? strutStyle</code>：支柱的风格。 Strut 定义了一组最小垂直行高相关的指标，可用于获得更高级的行间距行为</li><li><code>String? ellipsis</code>：用于省略溢出文本的字符串。如果 <code>maxLines</code> 不为 null，则 <code>ellipsis</code>（如果有）将应用于最后渲染的行，如果该行超出宽度约束。如果 <code>maxLines</code> 为 null，则将 <code>ellipsis</code> 应用于超出宽度约束的第一行，并删除后续行。宽度约束是在传递给Paragraph.layout方法</li><li><code>Locale? locale</code>：用于选择区域特定字形的语言环境</li></ul><p>我们可以发现，大部分属性和<code>TextStyle</code>是一样的，我就只讲几个不怎么常用的。</p><h4 id="textheightbehavior" tabindex="-1"><a class="header-anchor" href="#textheightbehavior"><span>TextHeightBehavior</span></a></h4><ul><li><code>bool applyHeightToFirstAscent</code>：当为 true 时， TextStyle.height修饰符将应用于第一行的上升。当为 false 时，将使用字体的默认上升。默认为true</li><li><code>bool applyHeightToLastDescent</code>：当为 true 时， TextStyle.height修饰符将应用于最后一行的下降。当为 false 时，将使用字体的默认下降。默认为true</li><li><code>TextLeadingDistribution leadingDistribution</code>：前导如何分布在文本之上和之下。默认为TextLeadingDistribution.proportional</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">  ParagraphStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(fontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, height</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, textHeightBehavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextHeightBehavior</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Hello World&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Paragraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraphConstraints);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drawParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraph, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试了一下，只有<code>applyHeightToFirstAscent</code>这个值对文字的排版有影响，其他两个属性没有效果。可能和字体有关，这个属性一般也用不到，默认就好。</p><img src="https://jitems.github.io/blog/bk518.png" alt="solar"><h4 id="strutstyle" tabindex="-1"><a class="header-anchor" href="#strutstyle"><span>StrutStyle</span></a></h4><ul><li><code>String? fontFamily</code>：字体</li><li><code>List&lt;String&gt;? fontFamilyFallback</code>：字体列表。当在<strong>fontFamily</strong>中找不到字体时将搜索该列表</li><li><code>double? fontSize</code>：字体大小</li><li><code>double? height</code>：字体行高</li><li><code>TextLeadingDistribution? leadingDistribution</code>：由<code>height</code>乘数增加的额外垂直空间应该如何分布在文本之上和之下，独立于<code>leading</code>（它总是均匀分布在文本之上和之下）。默认为段落的TextHeightBehavior的主要分布</li><li><code>double? leading</code>：行与行之间的最小行距，是字体大小的倍数。必须提供 <code>fontSize</code> 才能使该属性生效。无论 <strong>leadingDistribution</strong>是什么，此属性添加的前导均匀分布在文本上方和下方</li><li><code>FontWeight? fontWeight</code>：字重（粗细）</li><li><code>FontStyle? fontStyle</code>：绘制字母时使用的字体变体（例如，斜体）</li><li><code>bool? forceStrutHeight</code>：当为真时，段落将强制所有行从基线到基线完全是 <code>(height +leading) * fontSize</code> 高。 TextStyle不再能够影响行高，并且任何高字形都可能与上面的行重叠。如果指定了 <code>fontFamily</code>，则第一行的总上升将是 <code>fontFamily</code> 的 <code>Ascent + half-leading</code> 和 <code>(height +leading) * fontSize</code> 的最小值。否则，将由第一个文本的<code> Ascent + half-leading</code> 决定。默认为 false</li></ul><img src="https://jitems.github.io/blog/bk519.png" alt="solar"><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><ul><li><code>addText</code>：要绘制的文字内容</li><li><code>pushStyle</code>：将给定样式应用于添加的文本</li><li><code>pop</code>：删除最近一次调用pushStyle的效果</li><li><code>addPlaceholder</code>：向段落添加内联占位符空间</li><li><code>build</code>：应用给定的段落样式并返回一个包含添加的文本和相关样式的Paragraph 。调用此函数后，段落构建器对象无效，无法进一步使用</li><li><code>placeholderCount</code>：当前在段落中的占位符的数量</li><li><code>placeholderScales</code>：段落中占位符的比例</li></ul><h4 id="addtext、pushstyle和pop" tabindex="-1"><a class="header-anchor" href="#addtext、pushstyle和pop"><span>addText、pushStyle和pop</span></a></h4><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(fontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pushStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  fontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pushStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.red,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  fontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;吹梦到西洲&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Paragraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraphConstraints);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drawParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraph, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk520.png" alt="solar"><p><em>注意：</em><code>pushStyle</code>中的设置会覆盖<code>ParagraphStyle</code>，<code>addText</code>必须放在后面。</p><h4 id="addplaceholder" tabindex="-1"><a class="header-anchor" href="#addplaceholder"><span>addPlaceholder</span></a></h4><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addPlaceholder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">PlaceholderAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.top);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk521.png" alt="solar"><p><strong>PlaceholderAlignment</strong>还有 <strong>aboveBaseline</strong>、<strong>baseline</strong>、<strong>belowBaseline</strong>几个枚举值，这几个值的需要设置<strong>TextBaseline</strong>才能使用，但是我设置里<strong>TextBaseline</strong>还是没效果，你们可以自己试一下。</p><h4 id="build" tabindex="-1"><a class="header-anchor" href="#build"><span>build</span></a></h4><p>调用该方法会返回一个最终会绘制的<strong>Paragraph</strong>对象。</p><h2 id="paragraph" tabindex="-1"><a class="header-anchor" href="#paragraph"><span>Paragraph</span></a></h2><h3 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1"><span>属性</span></a></h3><ul><li><code>height</code>：此段落占的高度</li><li><code>width</code>：此段落的宽度</li><li><code>alphabeticBaseline</code>：从段落顶部到第一行字母基线的距离，以逻辑像素为单位</li><li><code>didExceedMaxLines</code>：如果有更多垂直内容，但文本被截断，则为真，要么是因为我们达到了maxLines文本行，要么是因为maxLines为空， ellipsis不为空，并且其中一行超出了宽度限制</li><li><code>ideographicBaseline</code>：从段落顶部到第一行的表意基线的距离，以逻辑像素为单位</li><li><code>longestLine</code>：段落最长的一行的长度</li><li><code>maxIntrinsicWidth</code>：返回最小的宽度，超过这个宽度，增加宽度不会减少高度</li><li><code>minIntrinsicWidth</code>：该段落可以在不绘制其内容的情况下的最小宽度</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pushStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.red,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  fontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;海水梦悠悠，君愁我亦愁。南风知我意，吹梦到西洲。&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Paragraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraphConstraints);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drawParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraph, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk522.png" alt="solar"><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> height</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 138.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 261.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alphabeticBaseline</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 37.119998931884766</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> didExceedMaxLines</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ideographicBaseline</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 46.33599853515625</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> longestLine</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 256.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> maxIntrinsicWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 768.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">I</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">flutter ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7724</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> minIntrinsicWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 256.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1"><span>方法</span></a></h3><ul><li><code>layout</code>：计算段落中每个字形的大小和位置</li><li><code>computeLineMetrics</code>：返回LineMetrics的完整列表，详细描述每条布局线的各种指标。这可能会返回大量数据，因此不建议重复调用它。相反，缓存结果</li><li><code>getBoxesForPlaceholders</code>：返回包含段落中所有占位符的文本框列表。框的顺序与通过ParagraphBuilder.addPlaceholder传入的顺序相同。TextBox的坐标相对于段落的左上角，其中正 y 值表示向下</li><li><code>getLineBoundary</code>：返回给定TextPosition处的行的TextRange 。换行符（如果有）作为范围的一部分返回。这可能会很昂贵，因为它需要计算线路指标，因此请谨慎使用</li><li><code>getBoxesForRange</code>：返回包含给定文本范围的文本框列表。boxHeightStyle和boxWidthStyle参数允许自定义框的垂直和水平绑定方式。两个样式参数都默认为tight选项，这将提供紧密贴合的框并且不会考虑任何行间距。TextBox 的坐标相对于段落的左上角，其中正 y 值表示向下</li><li><code>getPositionForOffset</code>：返回最接近给定偏移量的文本位置</li><li><code>getWordBoundary</code>：返回给定TextPosition处单词的TextRange 不属于单词的字符，例如空格、符号和标点符号，两边都有分词符。在这种情况下，此方法将返回offset, offset+1 。在 Unicode 标准附件 <a href="http://www.unicode.org/reports/tr29/#Word_Boundaries" target="_blank" rel="noopener noreferrer">#29</a> 中更精确地定义了单词边界</li></ul><h4 id="computelinemetrics" tabindex="-1"><a class="header-anchor" href="#computelinemetrics"><span>computeLineMetrics</span></a></h4><p>获取每一行的数据，返回一个行列表</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;ui.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">LineMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; lines </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">computeLineMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>既然最后获取的是一个<strong>LineMetrics</strong>数组，我们就来看看<strong>LineMetrics</strong>对象。它有以下多个属性：</p><ul><li><code>hardBreak</code>：如果此行以显式换行符结束（例如 &#39;\\n&#39;）或者是段落的结尾，则为true。否则为false</li><li><code>ascent</code>：以 baseline 为界线，上部分的高</li><li><code>descent</code>：以 baseline 为界线，下部分的高</li><li><code>unscaledAscent</code>：忽略TextStyle设置的height，上部分的高</li><li><code>height</code>：从顶部边缘到底部边缘的线的总高度</li><li><code>width</code>：从最左侧字形的左边缘到最右侧字形的右边缘的线宽</li><li><code>left</code>：线条左边缘的 x 坐标</li><li><code>baseline</code>：此行从段落顶部开始的基线 y 坐标</li><li><code>lineNumber</code>：行在整个段落中的编号，第一行索引为零</li></ul><img src="https://jitems.github.io/blog/bk523.png" alt="solar"><h4 id="getboxesforplaceholders" tabindex="-1"><a class="header-anchor" href="#getboxesforplaceholders"><span>getBoxesForPlaceholders</span></a></h4><p>获取所有的占位符的信息</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addPlaceholder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">PlaceholderAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.top);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraphBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addPlaceholder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">PlaceholderAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.top);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(paragraphConstraints);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; textBoxes </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBoxesForPlaceholders</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">	TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fromLTRBD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">87.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr), </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">	TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fromLTRBD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">120.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">47.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk524.png" alt="solar"><h4 id="getlineboundary" tabindex="-1"><a class="header-anchor" href="#getlineboundary"><span>getLineBoundary</span></a></h4><p>用来获取当前索引在绘制文字的第几行的范围</p><p>该方法需要传入一个<strong>TextPosition</strong>对象，<strong>TextPosition</strong>有两属性：</p><ul><li><code>offset </code>：索引</li><li><code>affinity</code>：关于 affinity 的介绍可以查看<a href="https://www.cnblogs.com/ilgnefz/p/16033229.html" target="_blank" rel="noopener noreferrer">这里</a></li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textRange </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getLineBoundary</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(offset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(start</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, end</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk525.png" alt="solar"><h4 id="getboxesforrange" tabindex="-1"><a class="header-anchor" href="#getboxesforrange"><span>getBoxesForRange</span></a></h4><p>获取范围内容所组成的矩形</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; textBox </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBoxesForRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">	TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fromLTRBD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">128.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">46.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr), </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">	TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fromLTRBD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">45.7</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">128.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">92.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk526.png" alt="solar"><h4 id="getpositionforoffset" tabindex="-1"><a class="header-anchor" href="#getpositionforoffset"><span>getPositionForOffset</span></a></h4><p>返回离坐标最近的字符串的索引</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPosition </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getPositionForOffset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(offset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, affinity</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextAffinity</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.downstream)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk527.png" alt="solar"><h4 id="getwordboundary" tabindex="-1"><a class="header-anchor" href="#getwordboundary"><span>getWordBoundary</span></a></h4><p>如果存在绘制的文本中，就返回位置，不存在就返回-1</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textRange </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraph.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getWordBoundary</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(offset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(start</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, end</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="layout" tabindex="-1"><a class="header-anchor" href="#layout"><span>layout</span></a></h4><p>需要传递一个<strong>ParagraphConstraints</strong>对象，用来限制文字的显示宽度</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> paragraphConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ParagraphConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(width</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="textpainter" tabindex="-1"><a class="header-anchor" href="#textpainter"><span>TextPainter</span></a></h1><p>创建一个绘制给定文本的文本画家。</p><h2 id="属性-2" tabindex="-1"><a class="header-anchor" href="#属性-2"><span>属性</span></a></h2><ul><li><p><code>InlineSpan? text</code>：设置显示的元素。虽然是可选，但是在调用<strong>layout</strong>前不能为null</p></li><li><p><code>TextAlign textAlign</code>：文本对齐方式。默认为TextAlign.start</p></li><li><p><code>TextDirection? textDirection</code>：文字方向。虽然是可选，但是在调用<strong>layout</strong>前不能为null</p></li><li><p><code>double textScaleFactor</code>：文字放大倍数。默认为1.0</p></li><li><p><code>int? maxLines</code>：最多是多少行</p></li><li><p><code>String? ellipsis</code>：使用省略号表示文本已溢出</p></li><li><p><code>Locale? locale</code>：用于选择区域特定字形的语言环境</p></li><li><p><code>StrutStyle? strutStyle</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</p></li><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>TextWidthBasis textWidthBasis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>：测量一行或多行文字宽度的不同方法</p><ul><li><code>TextWidthBasis.longestLine</code>：宽度将恰好足以包含最长的线并且不再。一个常见的用例是聊天气泡</li><li><code>TextWidthBasis.parent</code>：多行文本将占据父级给出的全宽。对于单行文本，仅使用包含文本所需的最小宽度。一个常见的用例是标准的段落系列。默认值</li></ul></li><li><p><code>ui.TextHeightBehavior? textHeightBehavior</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</p></li></ul><p><strong>TextPainter</strong>和<strong>ParagraphBuilder</strong>差不多，绘制的文字默认颜色是白色，大小是14。所以这里我们跳过一些不必要的介绍，先绘制一个最基本的：</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> text, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  textDirection</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(maxWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">paint</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(canvas, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk528.png" alt="solar"><p>可以看到，在<strong>TextPainter</strong>中，我们需要使用<strong>TextSpan</strong>组件来设置文字的内容和样式，关于这个组件的用法就不多做介绍了。</p><p>在<strong>TextPainter</strong>中，我们可以通过<strong>ellipsis</strong>来自定义显示文字溢出后的效果：</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> text, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  textDirection</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  maxLines</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ellipsis</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;😀😁😂&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://jitems.github.io/blog/bk529.png" alt="solar"><p>当然，我们可以在实例化的时候直接给属性赋值，也可以在实例化之后用<code>.</code>和<code>..</code>来给属性赋值。</p><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 方法一</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> text, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  textDirection</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 方法二</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ..text </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> text, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ..textDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 方法三</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPainter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.text </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> text, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.black));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.textDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ltr;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法-2" tabindex="-1"><a class="header-anchor" href="#方法-2"><span>方法</span></a></h2><ul><li><code>getWordBoundary</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</li><li><code>getPositionForOffset</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</li><li><code>getLineBoundary</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</li><li><code>computeLineMetrics</code>：具体用法查看<strong>drawParagraph</strong>的用法介绍</li><li><code>computeDistanceToActualBaseline</code>：返回从文本顶部到给定类型的第一个基线的距离</li><li><code>getBoxesForSelection</code>：返回绑定给定选择的矩形列表</li><li><code>getFullHeightForCaret</code>：{@template flutter.painting.textPainter.getFullHeightForCaret} 返回给定position字形的支柱边界高度</li><li><code>getOffsetForCaret</code>：返回绘制插入符号的偏移量</li><li><code>getOffsetAfter</code>：返回输入光标可以定位的offset量之后最近的偏移量</li><li><code>getOffsetBefore</code>：返回输入光标可以定位的offset量之前最接近的偏移量</li><li><code>markNeedsLayout</code>：将此文本绘制器的布局信息标记为脏并删除缓存信息。在引擎布局发生变化的情况下，使用此方法通知文本绘制器重新布局。在大多数情况下，更新框架中的文本绘制器属性会自动调用此方法</li><li><code>setPlaceholderDimensions</code>：设置text中每个占位符的尺寸。提供的PlaceholderDimensions数量应与文本中PlaceholderSpan的数量相同。传入一个空值或空value将什么都不做。如果在未设置占位符尺寸的情况下尝试layout ，则占位符将在文本布局中被忽略，并且不会返回有效的inlinePlaceholderBoxes</li><li><code>layout</code>：计算字形的视觉位置以绘制文本</li><li><code>paint</code>：在给定的偏移处将文本绘制到给定的画布上</li></ul><h3 id="computedistancetoactualbaseline" tabindex="-1"><a class="header-anchor" href="#computedistancetoactualbaseline"><span>computeDistanceToActualBaseline</span></a></h3><ul><li><code>TextBaseline.alphabetic</code>：用于对齐字母字符的字形底部的水平线</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(maxWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">paint</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(canvas, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alphabetic </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">computeDistanceToActualBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.alphabetic);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>TextBaseline.ideographic</code>：用于对齐表意字符的水平线</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ideographic </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">computeDistanceToActualBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ideographic);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="getboxesforselection" tabindex="-1"><a class="header-anchor" href="#getboxesforselection"><span>getBoxesForSelection</span></a></h3><p>该方法有以下3个属性：</p><ul><li><code>TextSelection</code>：创建文本选择。关于该对象的用法请查看<a href="https://www.cnblogs.com/ilgnefz/p/16033229.html#textselection" target="_blank" rel="noopener noreferrer">这里</a></li><li><code>BoxHeightStyle boxHeightStyle</code>：返回绑定给定选择的矩形列表。boxHeightStyle和boxWidthStyle参数可用于选择TextBox的形状。如果此文本绘制器包含双向文本，则给定选择可能具有多个矩形，因为逻辑上连续的文本可能在视觉上不连续。默认是<strong>tight</strong></li><li><code>BoxWidthStyle boxWidthStyle</code>：同<strong>BoxHeightStyle</strong></li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">TextBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; textBox </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBoxesForSelection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextSelection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(baseOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, extentOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  boxHeightStyle</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> BoxHeightStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.tight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  boxWidthStyle</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> BoxWidthStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.tight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试着修改<strong>boxHeightStyle</strong>的值，结果没有影响。</p><h3 id="getfullheightforcaret" tabindex="-1"><a class="header-anchor" href="#getfullheightforcaret"><span>getFullHeightForCaret</span></a></h3><p>该方法需要传入2个参数：</p><ul><li><code>TextPosition position</code>：创建一个表示字符串中特定位置的对象</li><li><code>Rect caretPrototype</code>：创建一个矩形</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Rect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> caretPrototype </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Rect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fromLTWH</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getFullHeightForCaret</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(offset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">), caretPrototype);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getoffsetforcaret" tabindex="-1"><a class="header-anchor" href="#getoffsetforcaret"><span>getOffsetForCaret</span></a></h3><p>同<strong>getFullHeightForCaret</strong></p><h3 id="markneedslayout" tabindex="-1"><a class="header-anchor" href="#markneedslayout"><span>markNeedsLayout</span></a></h3><p>将这个文本绘制器的布局信息标记为dirty ，并删除缓存的信息</p><h3 id="setplaceholderdimensions" tabindex="-1"><a class="header-anchor" href="#setplaceholderdimensions"><span>setPlaceholderDimensions</span></a></h3><p>需要传入一个<strong>PlaceholderDimensions</strong>对象的列表。</p><h4 id="placeholderdimensions" tabindex="-1"><a class="header-anchor" href="#placeholderdimensions"><span>PlaceholderDimensions</span></a></h4><ul><li><code>Size size</code>：占位符的宽度和高度尺寸</li><li><code>PlaceholderAlignment alignment</code>：如何将占位符与文本对齐</li><li><code>TextBaseline? baseline</code>：文本基线的位置</li><li><code>double? baselineOffset</code>：基线与占位符上边缘的距离</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> PlaceholderDimensions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  size</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> Size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  alignment</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> PlaceholderAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.middle,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  baseline</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.alphabetic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  baselineOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提供的PlaceholderDimensions数量应与文本中PlaceholderSpan的数量相同。传入一个空值或空value将什么都不做。如果在未设置占位符尺寸的情况下尝试layout ，则占位符将在文本布局中被忽略，并且不会返回有效的inlinePlaceholderBoxes 。</p><h3 id="layout-1" tabindex="-1"><a class="header-anchor" href="#layout-1"><span>layout</span></a></h3><p>有2个可选参数：</p><ul><li><code>double maxWidth</code>：文字显示的最大宽度</li><li><code>double minWidth</code>：文字显示的最小宽度</li></ul><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(maxWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="paint" tabindex="-1"><a class="header-anchor" href="#paint"><span>paint</span></a></h3><div class="language-dart line-numbers-mode" data-highlighter="shiki" data-ext="dart" data-title="dart" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">textPainter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">paint</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(canvas, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">Offset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(size.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,124);function p(r,d){return h(),s("div",null,[n,a(" more "),k])}const o=i(l,[["render",p],["__file","使用CustomPaint绘制文字.html.vue"]]),c=JSON.parse('{"path":"/flutter%E6%95%99%E7%A8%8B/%E5%8A%9F%E8%83%BD%E4%BD%BF%E7%94%A8/%E4%BD%BF%E7%94%A8CustomPaint%E7%BB%98%E5%88%B6%E6%96%87%E5%AD%97.html","title":"使用CustomPaint绘制文字","lang":"zh-CN","frontmatter":{"title":"使用CustomPaint绘制文字","category":["前端"],"tag":["flutter"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/flutter%E6%95%99%E7%A8%8B/%E5%8A%9F%E8%83%BD%E4%BD%BF%E7%94%A8/%E4%BD%BF%E7%94%A8CustomPaint%E7%BB%98%E5%88%B6%E6%96%87%E5%AD%97.html"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"使用CustomPaint绘制文字"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:34:54.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:tag","content":"flutter"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:34:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用CustomPaint绘制文字\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:34:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"ParagraphBuilder","slug":"paragraphbuilder","link":"#paragraphbuilder","children":[{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"Paragraph","slug":"paragraph","link":"#paragraph","children":[{"level":3,"title":"属性","slug":"属性-1","link":"#属性-1","children":[]},{"level":3,"title":"方法","slug":"方法-1","link":"#方法-1","children":[]}]},{"level":2,"title":"属性","slug":"属性-2","link":"#属性-2","children":[]},{"level":2,"title":"方法","slug":"方法-2","link":"#方法-2","children":[{"level":3,"title":"computeDistanceToActualBaseline","slug":"computedistancetoactualbaseline","link":"#computedistancetoactualbaseline","children":[]},{"level":3,"title":"getBoxesForSelection","slug":"getboxesforselection","link":"#getboxesforselection","children":[]},{"level":3,"title":"getFullHeightForCaret","slug":"getfullheightforcaret","link":"#getfullheightforcaret","children":[]},{"level":3,"title":"getOffsetForCaret","slug":"getoffsetforcaret","link":"#getoffsetforcaret","children":[]},{"level":3,"title":"markNeedsLayout","slug":"markneedslayout","link":"#markneedslayout","children":[]},{"level":3,"title":"setPlaceholderDimensions","slug":"setplaceholderdimensions","link":"#setplaceholderdimensions","children":[]},{"level":3,"title":"layout","slug":"layout-1","link":"#layout-1","children":[]},{"level":3,"title":"paint","slug":"paint","link":"#paint","children":[]}]}],"git":{"createdTime":1659952375000,"updatedTime":1720593294000,"contributors":[{"name":"test","email":"email","commits":2}]},"readingTime":{"minutes":12.75,"words":3825},"filePathRelative":"flutter教程/功能使用/使用CustomPaint绘制文字.md","localizedDate":"2022年8月8日","excerpt":"<p>&nbsp;</p>\\n"}');export{o as comp,c as data};
