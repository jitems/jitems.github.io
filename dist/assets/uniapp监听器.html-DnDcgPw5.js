import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,a as e,d as t,o as n}from"./app-Bi9sAhmd.js";const l={},p=e("p",null," ",-1),h=t(`<h1 id="uniapp监听器" tabindex="-1"><a class="header-anchor" href="#uniapp监听器"><span>uniapp监听器</span></a></h1><p><strong>uni.$emit(eventName,OBJECT)</strong> 触发全局的自定义事件，附加参数都会传给监听器回调函数。 属性 类型 描述 eventName String 事件名 OBJECT Object 触发事件携带的附加参数 代码示例</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">uni.$emit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;update&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">{msg:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;页面更新&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>uni.$on(eventName,callback)</strong></p><p>监听全局的自定义事件，事件由 uni.$emit 触发，回调函数会接收事件触发函数的传入参数。</p><p>属性 类型 描述 eventName String 事件名 callback Function 事件的回调函数 代码示例</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">uni.$on(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;update&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,function(data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    console.log(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> data.msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>uni.$once(eventName,callback)</strong></p><p>监听全局的自定义事件，事件由 uni.$emit 触发，但仅触发一次，在第一次触发之后移除该监听器。</p><p>属性 类型 描述 eventName String 事件名 callback Function 事件的回调函数 代码示例</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">uni.$once(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;update&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,function(data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    console.log(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&#39;监听到事件来自 update ，携带参数 msg 为：&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> data.msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>uni.$off([eventName, callback])</strong></p><p>移除全局自定义事件监听器。</p><p>属性 类型 描述 eventName Array＜String＞ 事件名 callback Function 事件的回调函数</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">如果uni.$off没有传入参数，则移除App级别的所有事件监听器；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">如果只提供了事件名（eventName），则移除该事件名对应的所有监听器；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">如果同时提供了事件与回调，则只移除这个事件回调的监听器；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">提供的回调必须跟$on的回调为同一个才能移除这个回调的监听器；</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function r(d,k){return n(),s("div",null,[p,a(" more "),h])}const g=i(l,[["render",r],["__file","uniapp监听器.html.vue"]]),m=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/uniapp%E6%95%99%E7%A8%8B/uniapp%E7%9B%91%E5%90%AC%E5%99%A8.html","title":"uniapp监听器","lang":"zh-CN","frontmatter":{"title":"uniapp监听器","category":["前端"],"tag":["uniapp"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF/uniapp%E6%95%99%E7%A8%8B/uniapp%E7%9B%91%E5%90%AC%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"uniapp监听器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:09:47.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:tag","content":"uniapp"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:09:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"uniapp监听器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:09:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1659952375000,"updatedTime":1720591787000,"contributors":[{"name":"test","email":"email","commits":1}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"前端/uniapp教程/uniapp监听器.md","localizedDate":"2022年8月8日","excerpt":"<p>&nbsp;</p>\\n"}');export{g as comp,m as data};
