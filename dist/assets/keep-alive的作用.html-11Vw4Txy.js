import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as l,d as t}from"./app-Bi9sAhmd.js";const a={},p=t('<h1 id="keep-alive的作用" tabindex="-1"><a class="header-anchor" href="#keep-alive的作用"><span>keep-alive的作用</span></a></h1><p>是 Vue 提供的一个内置组件，可以用于保留组件状态或避免重新渲染</p><p><strong>场景：</strong></p><ul><li>有时候我们在搜索页面不小心点了别的页面，返回的时候还想看到我们之前搜索过的数据时，这时候要用到keep-alive标签包裹组件，这时候我们的这个组件就被缓存下来了。</li><li>商品列表页点击商品跳转到商品详情，返回后仍显示原有信息</li><li>订单列表跳转到订单详情，返回，等等场景</li></ul><h2 id="keep-alive-的作用" tabindex="-1"><a class="header-anchor" href="#keep-alive-的作用"><span>keep-alive 的作用</span></a></h2><ul><li>缓存组件：当组件在 <code>&lt;keep-alive&gt;</code> 标签内时，不活跃的组件实例将被缓存，而不是销毁。</li><li>提高性能：通过减少组件的重新渲染，可以提高应用的性能。</li><li>保存状态：组件的状态在被缓存时保存下来，用户返回时能够保持原来的状态，提高用户体验。</li></ul><h2 id="keep-alive-钩子-生命周期" tabindex="-1"><a class="header-anchor" href="#keep-alive-钩子-生命周期"><span>keep-alive 钩子(生命周期)</span></a></h2><p>当组件在 <code>&lt;keep-alive&gt;</code> 内被切换时，它们会触发额外的生命周期钩子：</p><ul><li><strong>activated: 当组件被激活（插入到 DOM 树中）时调用</strong>。</li><li><strong>deactivated: 当组件被停用（从 DOM 树中移除）时调用</strong>。</li></ul><p>这些额外的生命周期钩子允许开发者在组件被缓存和恢复时执行特定的逻辑。</p><h2 id="何时使用keep-alive" tabindex="-1"><a class="header-anchor" href="#何时使用keep-alive"><span>何时使用keep-alive?</span></a></h2><p>缓存组件，不用重复渲染的时候。 如，前端多个静态tab页面切换。可以优化性能</p><h2 id="vue常见的性能优化" tabindex="-1"><a class="header-anchor" href="#vue常见的性能优化"><span>vue常见的性能优化</span></a></h2><ul><li>合理使用v-show和v-if</li><li>v-for加key，以及避免和v-if同时使用</li><li>自定义事件、DOM事件及时销毁</li><li>合理使用异步组件</li><li>合理使用Keep-live</li><li>前端通用优化，图片懒加载</li></ul>',14),n=[p];function o(r,c){return l(),i("div",null,n)}const d=e(a,[["render",o],["__file","keep-alive的作用.html.vue"]]),h=JSON.parse('{"path":"/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/keep-alive%E7%9A%84%E4%BD%9C%E7%94%A8.html","title":"keep-alive的作用","lang":"zh-CN","frontmatter":{"description":"keep-alive的作用 是 Vue 提供的一个内置组件，可以用于保留组件状态或避免重新渲染 场景： 有时候我们在搜索页面不小心点了别的页面，返回的时候还想看到我们之前搜索过的数据时，这时候要用到keep-alive标签包裹组件，这时候我们的这个组件就被缓存下来了。 商品列表页点击商品跳转到商品详情，返回后仍显示原有信息 订单列表跳转到订单详情，返回...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%9F%A5%E8%AF%86%E5%BA%93/vue2/keep-alive%E7%9A%84%E4%BD%9C%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"遐想的猫"}],["meta",{"property":"og:title","content":"keep-alive的作用"}],["meta",{"property":"og:description","content":"keep-alive的作用 是 Vue 提供的一个内置组件，可以用于保留组件状态或避免重新渲染 场景： 有时候我们在搜索页面不小心点了别的页面，返回的时候还想看到我们之前搜索过的数据时，这时候要用到keep-alive标签包裹组件，这时候我们的这个组件就被缓存下来了。 商品列表页点击商品跳转到商品详情，返回后仍显示原有信息 订单列表跳转到订单详情，返回..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T06:09:47.000Z"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:modified_time","content":"2024-07-10T06:09:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"keep-alive的作用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-10T06:09:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"keep-alive 的作用","slug":"keep-alive-的作用","link":"#keep-alive-的作用","children":[]},{"level":2,"title":"keep-alive 钩子(生命周期)","slug":"keep-alive-钩子-生命周期","link":"#keep-alive-钩子-生命周期","children":[]},{"level":2,"title":"何时使用keep-alive?","slug":"何时使用keep-alive","link":"#何时使用keep-alive","children":[]},{"level":2,"title":"vue常见的性能优化","slug":"vue常见的性能优化","link":"#vue常见的性能优化","children":[]}],"git":{"createdTime":1720591787000,"updatedTime":1720591787000,"contributors":[{"name":"test","email":"email","commits":1}]},"readingTime":{"minutes":1.5,"words":450},"filePathRelative":"知识库/vue2/keep-alive的作用.md","localizedDate":"2024年7月10日","excerpt":"\\n<p>是 Vue 提供的一个内置组件，可以用于保留组件状态或避免重新渲染</p>\\n<p><strong>场景：</strong></p>\\n<ul>\\n<li>有时候我们在搜索页面不小心点了别的页面，返回的时候还想看到我们之前搜索过的数据时，这时候要用到keep-alive标签包裹组件，这时候我们的这个组件就被缓存下来了。</li>\\n<li>商品列表页点击商品跳转到商品详情，返回后仍显示原有信息</li>\\n<li>订单列表跳转到订单详情，返回，等等场景</li>\\n</ul>\\n<h2>keep-alive 的作用</h2>\\n<ul>\\n<li>缓存组件：当组件在 <code>&lt;keep-alive&gt;</code> 标签内时，不活跃的组件实例将被缓存，而不是销毁。</li>\\n<li>提高性能：通过减少组件的重新渲染，可以提高应用的性能。</li>\\n<li>保存状态：组件的状态在被缓存时保存下来，用户返回时能够保持原来的状态，提高用户体验。</li>\\n</ul>","autoDesc":true}');export{d as comp,h as data};
